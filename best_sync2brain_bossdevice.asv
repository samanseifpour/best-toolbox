classdef best_sync2brain_bossdevice

    
    properties
        bb %bossbox API object
        best_toolb
        EMGScope
        IEEGScope
        IAScope
        IPScope
    end
    
    methods
        function obj = best_sync2brain_bossdevice(best_toolbox)
            obj.best_toolbox=best_toolbox;
                obj.bb=dbsp('10.10.10.1');

        end
        
        function singlePulse(obj,portNo)
                obj.bb.sendPulse(portNo)
        end
        
        function multiPulse(obj,time_port_marker_vector)
            obj.bb.configure_time_port_marker(cell2mat(time_port_marker_vector'));
            obj.bb.manualTrigger;
        end
        
        function EMGScopeBoot(obj,EMGDisplayPeriodPre,EMGDisplayPeriodPost)
            disp enteredEMGScopeboot
            NumSamples=(EMGDisplayPeriodPost+EMGDisplayPeriodPre)*5;
            NumPrePostSamples=EMGDisplayPeriodPre*5;
            obj.EMGScope = addscope(obj.bb.tg, 'host', 90);
            AuxSignalID = getsignalid(obj.bb.tg, 'aux_raw') + int32(0:8);
            MrkSignalID = getsignalid(obj.bb.tg, 'mrk_raw') + int32([0 1 2]);
            addsignal(obj.EMGScope, AuxSignalID);
            obj.EMGScope.NumSamples = NumSamples;
            obj.EMGScope.NumPrePostSamples = -NumPrePostSamples;
            obj.EMGScope.Decimation = 1;
            obj.EMGScope.TriggerMode = 'Signal';
            obj.EMGScope.TriggerSignal = MrkSignalID(3); %in Tuebingen setup the 2nd coloumn of signal was giving the return values, however in Mainz setup it was the third coloumn
            obj.EMGScope.TriggerLevel = 0.5;
            obj.EMGScope.TriggerSlope = 'Rising';
            obj.EMGScope
        end
        
        function IEEGScopeBoot(obj,EEGDisplayPeriodPre,EEGDisplayPeriodPost)
        end
        
        function IPScopeBoot(obj)
        end
        
        function IAScopeBoot(obj)
        end
        
        function EMGScopeStart(obj)
            start(obj.EMGScope);
%             pause(0.1); % give the scope time to pre-aquire
%             assert(strcmp(obj.EMGScope.Status, 'Ready for being Triggered'));
        end
        
        function IEEGScopeStart(obj)
        end
        
        function IPScopeStart(obj)
        end
        
        function IAScopeStart(obj)
        end
    end
end

